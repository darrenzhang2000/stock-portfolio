{"version":3,"sources":["components/Login.js","redux/userReducer.js","redux/reduxStore.js","containers/Login.js","components/Register.js","containers/Register.js","components/Navbar.js","components/Home.js","components/Portfolio.js","containers/Portfolio.js","components/Purchase.js","containers/Purchase.js","components/Transactions.js","containers/Transactions.js","App.js","serviceWorker.js","index.js"],"names":["Copyright","Typography","variant","color","align","href","Date","getFullYear","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","SignIn","props","classes","Container","component","maxWidth","location","state","msg","errors","map","err","i","key","CssBaseline","className","Avatar","noValidate","onSubmit","onSubmitHandler","TextField","required","fullWidth","id","label","name","autoComplete","autoFocus","onChange","changeEmailHandler","type","changePasswordHandler","FormControlLabel","control","Checkbox","value","Button","Grid","container","item","xs","to","Box","mt","initialState","email","balance","userReducer","action","Object","assign","user","addUserDispatch","store","dispatch","console","log","addUser","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","LoginContainer","e","setState","target","password","preventDefault","push","test","String","toLowerCase","length","url","axios","get","then","res","data","alert","setUser","this","React","Component","mapDispatchToProps","connect","SignUp","sm","changeNameHandler","justify","RegisterContainer","post","Navbar","logoutHandler","AppBar","position","Toolbar","alighContent","xm","onClick","Home","class","table","minWidth","TableContainer","Paper","Table","aria-label","TableHead","TableRow","TableCell","TableBody","stocks","stock","index","currentPrice","openingPrice","scope","style","tickerSymb","qty","Math","round","PortfolioContainer","updateStocks","a","status","onTickerChange","onQtyChange","PurchaseContainer","ticker","parseInt","Number","isInteger","stockPrices","error","message","price","cost","toFixed","parseFloat","userEmail","getUser","newBalance","transactionHistory","transaction","toUpperCase","TransactionsContainer","getTransactionHistory","Array","from","sort","t1","t2","time","App","path","Login","Register","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.61ecbe2b.chunk.js","sourcesContent":["import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { Link } from \"react-router-dom\"\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"./\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignIn(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <p>{props.location ? props.location.state.msg : null}</p>\r\n      <ul>\r\n        {\r\n          props.errors ? props.errors.map((err, i) => <li key={i}>{err.msg}</li>) : null\r\n        }\r\n      </ul>\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          {/* insert icon */}\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <form className={classes.form} noValidate onSubmit={props.onSubmitHandler}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n            onChange={props.changeEmailHandler}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            onChange={props.changePasswordHandler}\r\n          />\r\n          <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link to=\"./Register\" variant=\"body2\">\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n\r\n","// import store from \"./reduxStore\"\r\n\r\n// action types\r\nconst ADD_USER = \"ADD_USER\"\r\nconst REMOVE_USER = \"REMOVE_USER\"\r\n\r\n// action creators\r\nexport function addUser(user) {\r\n    console.log('action user', user)\r\n  return {\r\n    type: ADD_USER,\r\n    user,\r\n  }\r\n}\r\n\r\nexport function removeUser() {\r\n  return {\r\n    type: REMOVE_USER,\r\n  }\r\n}\r\n\r\nconst initialState = {\r\n  name: \"\",\r\n  email: \"\",\r\n  balance: 0,\r\n  //transactions: [],\r\n  //portfolio: []\r\n}\r\n\r\n// reducers\r\nfunction userReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case ADD_USER:\r\n      return Object.assign({}, state, {\r\n        // name: action.user.name,\r\n        email: action.user.email,\r\n        balance: action.user.balance\r\n      })\r\n\r\n    case REMOVE_USER:\r\n      return Object.assign({}, state, {\r\n        // name: \"\",\r\n        email: \"\",\r\n        balance: 0\r\n      })\r\n    // if the action is not recognized, don't do anything\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default userReducer","import { createStore } from \"redux\"\r\nimport userReducer from \"./userReducer\"\r\nimport { addUser, removeUser } from \"./userReducer\"\r\n\r\nexport function addUserDispatch(user){\r\n    return store.dispatch(addUser(user))\r\n}\r\n\r\nexport function removeUserDispatch(){\r\n    return store.dispatch(removeUser())\r\n}\r\n\r\nconst store = createStore(\r\n  userReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n)\r\n\r\nexport default store\r\n","import React from \"react\"\r\nimport Login from \"../components/Login\"\r\nimport axios from 'axios'\r\nimport { addUserDispatch } from '../redux/reduxStore'\r\nimport { connect } from 'react-redux'\r\n\r\nfunction validateEmail(email) {\r\n    var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email).toLowerCase());\r\n}\r\n\r\nclass LoginContainer extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            email: \"\",\r\n            password: \"\",\r\n            errors: []\r\n        }\r\n    }\r\n\r\n    changeEmailHandler = (e) => {\r\n        this.setState({ email: e.target.value })\r\n    }\r\n\r\n    changePasswordHandler = (e) => {\r\n        this.setState({ password: e.target.value })\r\n    }\r\n\r\n    onSubmitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        //form validation \r\n        this.setState({errors: []}) //clears existing errors if any\r\n        let errors = []\r\n        \r\n        //all fields non-empty\r\n        if(!this.state.email || !this.state.password){\r\n            errors.push({ msg: 'Please fill in all fields' })\r\n        }\r\n\r\n        //check if valid email\r\n        if(!validateEmail(this.state.email)){\r\n            errors.push({ msg: \"Please enter valid email address\"})\r\n        }\r\n\r\n        //if no errors, check authentication by making an axios get request\r\n        if(!errors.length){\r\n            const url = `/users/login/email/${this.state.email}/password/${this.state.password}`\r\n            axios.get(url)\r\n                .then(res => {\r\n                    //email not in db\r\n                    if(res.data == \"User does not exist\"){\r\n                        errors.push({msg: \"Email does not exist\"})\r\n                        this.setState({ errors: errors })\r\n                    }\r\n                    //email in db but password is wrong\r\n                    else if(res.data == \"email exists but incorrect password\"){\r\n                        errors.push({msg: \"wrong password\"})\r\n                        this.setState({ errors: errors })\r\n                    }\r\n                    //successful login: email and password match\r\n                    else if(res.data == \"Success: email and password match\"){\r\n                        //add user to redux store\r\n                        addUserDispatch({ email: this.state.email, balance: 5000 })\r\n\r\n                        alert(\"Login Successful!\")\r\n                        //pass user to login\r\n                        this.props.setUser(this.state.email)\r\n                        //redirect to home page\r\n                    }\r\n                })\r\n        }\r\n        else{\r\n            this.setState({ errors: errors })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        this.props.location ? console.log(this.props.location.state.msg) : console.log('nothing')\r\n\r\n        return <Login \r\n        errors={this.state.errors}\r\n        changeEmailHandler={this.changeEmailHandler}\r\n        changePasswordHandler={this.changePasswordHandler}\r\n        onSubmitHandler={this.onSubmitHandler} />\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = { addUserDispatch }\r\n\r\nexport default connect(null, mapDispatchToProps)(LoginContainer)\r\n","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { Link } from \"react-router-dom\"\r\n\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignUp(props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <ul>\r\n        {\r\n          props.errors ? props.errors.map((err, i) => <li key={i}>{err.msg}</li>) : null\r\n        }\r\n      </ul>\r\n      \r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n        {/* insert icon here */}\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <form className={classes.form} noValidate onSubmit={props.onSubmitHandler}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                autoComplete=\"fname\"\r\n                name=\"firstName\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"firstName\"\r\n                label=\"First Name\"\r\n                autoFocus\r\n                onChange={props.changeNameHandler}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"lastName\"\r\n                label=\"Last Name\"\r\n                name=\"lastName\"\r\n                autoComplete=\"lname\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                onChange={props.changeEmailHandler}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                onChange={props.changePasswordHandler}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <FormControlLabel\r\n                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\r\n                label=\"I want to receive inspiration, marketing promotions and updates via email.\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign Upl\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link to=\"./Login\" variant=\"body2\">\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}","import React from \"react\"\r\nimport Register from \"../components/Register\"\r\nimport axios from 'axios'\r\n\r\nfunction validateEmail(email) {\r\n    var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email).toLowerCase());\r\n}\r\n\r\nclass RegisterContainer extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            name: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            balance: 5000,\r\n            errors: \"\"\r\n        }\r\n    }\r\n\r\n    changeNameHandler = (e) => {\r\n        this.setState({\r\n            name: e.target.value,\r\n        })\r\n        console.log(this.state.name)\r\n    }\r\n\r\n    changeEmailHandler = (e) => {\r\n        this.setState({\r\n            email: e.target.value,\r\n        })\r\n        console.log(this.state.email)\r\n    }\r\n\r\n    changePasswordHandler = (e) => {\r\n        this.setState({\r\n            password: e.target.value,\r\n        })\r\n        console.log(this.state.password)\r\n    }\r\n\r\n    onSubmitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        //create user \r\n        let user = { ...this.state }\r\n\r\n        //form validation \r\n        this.setState({errors: []}) //clears existing errors if any\r\n        let errors = []\r\n        \r\n        //all fields non-empty\r\n        if(!this.state.name || !this.state.email || !this.state.password){\r\n            errors.push({ msg: 'Please fill in all fields' })\r\n        }\r\n\r\n        //check if valid email\r\n        if(!validateEmail(this.state.email)){\r\n            errors.push({ msg: \"Please enter valid email address\"})\r\n        }\r\n\r\n        //if no errors, add user to db by making an axios call to backend server \r\n        if(!errors.length){\r\n        axios.post('/users/register', {user})\r\n            .then(res => {\r\n                //check if email already exists in db\r\n                if(res.data ==\"Email already exists\"){\r\n                    errors.push({msg: \"Email already exists\"})\r\n                    //re-direct to same page with error and original data \r\n                    this.setState({ errors: errors })\r\n                }\r\n                else{\r\n                    //success\r\n                    alert('You have successfully registered')\r\n                    //redirect to home page\r\n                }\r\n            })\r\n        }\r\n        else{\r\n            //if there are errors, re-direct to the same page with errors and original data\r\n            this.setState({ errors: errors })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Register\r\n                name={this.state.name}\r\n                email={this.state.email}\r\n                password={this.state.password}\r\n                balance={this.state.balance}\r\n                errors={this.state.errors}\r\n                changeNameHandler={this.changeNameHandler}\r\n                changeEmailHandler={this.changeEmailHandler}\r\n                changePasswordHandler={this.changePasswordHandler}\r\n                onSubmitHandler={this.onSubmitHandler}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default RegisterContainer\r\n","import React from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport AppBar from \"@material-ui/core/AppBar\"\r\nimport Toolbar from \"@material-ui/core/Toolbar\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport \"../styles/navbar.css\"\r\nimport { removeUserDispatch } from \"../redux/reduxStore\"\r\nimport { connect } from \"react-redux\"\r\n\r\nclass Navbar extends React.Component {\r\n  constructor() {\r\n    super()\r\n  }\r\n\r\n  logoutHandler = () => {\r\n    removeUserDispatch()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <AppBar position=\"sticky\">\r\n        <Toolbar>\r\n          <Grid container justify=\"space-between\" alighContent=\"flex-end\">\r\n            <Grid item xm={12}>\r\n              <Typography variant=\"h6\">\r\n                <Link className=\"navlink\" to=\"../components/Home\">\r\n                  {\" \"}\r\n                  Stock Portfolio\r\n                </Link>\r\n              </Typography>\r\n            </Grid>\r\n\r\n            <Grid item>\r\n              <Button color=\"inherit\">\r\n                <Link className=\"navlink\" to=\"/containers/Transactions\">\r\n                  Transactions\r\n                </Link>\r\n              </Button>\r\n            </Grid>\r\n\r\n            <Grid item xm={2}>\r\n              <Button color=\"inherit\">\r\n                <Link className=\"navlink\" to=\"/containers/Portfolio\">\r\n                  Portfolio\r\n                </Link>\r\n              </Button>\r\n            </Grid>\r\n\r\n            <Grid item>\r\n              <Button color=\"inherit\">\r\n                <Link className=\"navlink\" to=\"/containers/Purchase\">\r\n                  Purchase\r\n                </Link>\r\n              </Button>\r\n            </Grid>\r\n\r\n            <Grid item xm={1}>\r\n              {!this.props.email ? (\r\n                <Button color=\"inherit\">\r\n                  <Link className=\"navlink\" to=\"/containers/Login\">\r\n                    Login\r\n                  </Link>\r\n                </Button>\r\n              ) : (\r\n                <Button color=\"inherit\" onClick={this.logoutHandler}>\r\n                  Logout\r\n                </Button>\r\n              )}\r\n            </Grid>\r\n\r\n            <Grid item xm={1}>\r\n              {!this.props.email ? (\r\n                <Button color=\"inherit\">\r\n                  <Link className=\"navlink\" to=\"/containers/Register\">\r\n                    Register\r\n                  </Link>\r\n                </Button>\r\n              ) : null}\r\n            </Grid>\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    email: state.email,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar)\r\n","import React from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport \"../styles/app.css\"\r\n\r\nconst Home = (props) => {\r\n  return (\r\n    <div class=\"center\">\r\n      <h1>Welcome to Stockfolio!</h1>\r\n      <p>\r\n        Here, you can create an account, buy stocks, and audit your\r\n        transactions.{\" \"}\r\n      </p>\r\n      <p>To begin, <Link to=\"./Login\">login</Link> or <Link to=\"./Register\">sign up</Link> </p>\r\n      <p></p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import React from \"react\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport { connect } from \"react-redux\"\r\nimport Container from \"@material-ui/core/Container\"\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\"\r\nimport { Link } from \"react-router-dom\"\r\nimport Table from \"@material-ui/core/Table\"\r\nimport TableBody from \"@material-ui/core/TableBody\"\r\nimport TableCell from \"@material-ui/core/TableCell\"\r\nimport TableContainer from \"@material-ui/core/TableContainer\"\r\nimport TableHead from \"@material-ui/core/TableHead\"\r\nimport TableRow from \"@material-ui/core/TableRow\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport Paper from \"@material-ui/core/Paper\"\r\nimport \"../App.css\"\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n})\r\n\r\nconst Portfolio = (props) => {\r\n  const classes = useStyles()\r\n\r\n  if (props.email) {\r\n    return (\r\n      <div class=\"table\">\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Portfolio\r\n        </Typography>\r\n        <TableContainer component={Paper} className=\"tableContainer\">\r\n          <Table className={classes.table} aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Stock Ticker Symbol</TableCell>\r\n                <TableCell align=\"right\">Quantity</TableCell>\r\n                <TableCell align=\"right\">Total Value</TableCell>\r\n                <TableCell align=\"right\">Opening Price</TableCell>\r\n                <TableCell align=\"right\">Current Price</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {props.stocks.length > 0 ? (\r\n                props.stocks.map((stock, index) => {\r\n                  let color\r\n                  if (stock.currentPrice < stock.openingPrice) {\r\n                    color = \"red\"\r\n                  } else if (stock.currentPrice == stock.openingPrice) {\r\n                    color = \"gray\"\r\n                  } else {\r\n                    color = \"green\"\r\n                  }\r\n\r\n                  return (\r\n                    <TableRow key={index}>\r\n                      <TableCell\r\n                        component=\"th\"\r\n                        scope=\"row\"\r\n                        style={{ color: color }}\r\n                      >\r\n                        {stock.tickerSymb}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">{stock.qty}</TableCell>\r\n                      <TableCell align=\"right\">\r\n                        {Math.round(stock.currentPrice * 100 * stock.qty) / 100}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">\r\n                        {Math.round(stock.openingPrice * 100) / 100}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\" style={{ color: color }}>\r\n                        {Math.round(stock.currentPrice * 100) / 100}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  )\r\n                })\r\n              ) : (\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  User does not have any stocks\r\n                </TableCell>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    )\r\n  } else {\r\n    return (\r\n      <div>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Portfolio\r\n        </Typography>\r\n        <p>\r\n          Please <Link to=\"../containers/Login\">log in</Link> to view your\r\n          portfolio.\r\n        </p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    email: state.email,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Portfolio)\r\n","import React from \"react\"\r\nimport axios from \"axios\"\r\nimport Portfolio from \"../components/Portfolio\"\r\n\r\nclass PortfolioContainer extends React.Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      stocks: [],\r\n    }\r\n  }\r\n\r\n  updateStocks = () => {\r\n    const url = `/stocks/email/${this.props.user}/stock`\r\n    axios.get(url).then(async (res) => {\r\n      let stocks = res.data\r\n\r\n      //Add openingPrice and currentPrice to each stock\r\n      for(let i = 0; i < stocks.length; i++){\r\n        await axios.get(stocks[i].url).then((res) => {\r\n          if(res.status == 200){\r\n            console.log('i', res.data)\r\n            stocks[i][\"openingPrice\"] = res.data[\"open\"]\r\n            stocks[i][\"currentPrice\"] = res.data[\"latestPrice\"]\r\n          }\r\n        })\r\n      }\r\n\r\n      this.setState({ stocks: stocks })\r\n    })\r\n  }\r\n  render() {\r\n    if (this.props.user && this.state.stocks.length == 0) {\r\n      this.updateStocks()\r\n    }\r\n    return (\r\n      <div>\r\n        <Portfolio stocks={this.state.stocks} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PortfolioContainer\r\n","import React from \"react\"\r\nimport Avatar from \"@material-ui/core/Avatar\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport { connect } from \"react-redux\"\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\"\r\nimport TextField from \"@material-ui/core/TextField\"\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\"\r\nimport Checkbox from \"@material-ui/core/Checkbox\"\r\nimport { Link } from \"react-router-dom\"\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport Box from \"@material-ui/core/Box\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport Container from \"@material-ui/core/Container\"\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"./\">\r\n        Your Website\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}))\r\n\r\nconst Purchase = (props) => {\r\n  const classes = useStyles()\r\n\r\n  if (props.email) {\r\n    return (\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n\r\n        <form name=\"purchase\" onSubmit={props.onSubmitHandler}>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Purchase stocks{\" \"}\r\n          </Typography>\r\n          <ul>\r\n            {props.errors\r\n              ? props.errors.map((err, index) => <li key={index}>{err.msg}</li>)\r\n              : null}\r\n          </ul>\r\n          <div>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"ticker\"\r\n              label=\"ticker\"\r\n              name=\"ticker\"\r\n              autoComplete=\"ticker\"\r\n              autoFocus\r\n              onChange={props.onTickerChange}\r\n            />\r\n          </div>\r\n          <div>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"qty\"\r\n              label=\"qty\"\r\n              type=\"qty\"\r\n              id=\"qty\"\r\n              autoComplete=\"qty\"\r\n              onChange={props.onQtyChange}\r\n            />\r\n          </div>\r\n\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Purchase\r\n          </Button>\r\n        </form>\r\n      </Container>\r\n    )\r\n  }\r\n  else{\r\n    return (\r\n      <div>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Purchase Stocks\r\n        </Typography>\r\n        <p>\r\n          Please <Link to=\"../containers/Login\">log in</Link> to purchase stocks.\r\n        </p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    email: state.email,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Purchase)\r\n","import React from \"react\"\r\nimport Purchase from \"../components/Purchase\"\r\nimport axios from \"axios\"\r\n\r\nclass PurchaseContainer extends React.Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      ticker: \"\",\r\n      qty: 0,\r\n    }\r\n  }\r\n  onTickerChange = (e) => {\r\n    this.setState({ ticker: e.target.value })\r\n  }\r\n\r\n  onQtyChange = (e) => {\r\n    this.setState({ qty: parseInt(e.target.value) })\r\n  }\r\n\r\n  onSubmitHandler = (e) => {\r\n    e.preventDefault()\r\n\r\n    //makes sure form fields are non-empty\r\n    let errors = []\r\n    let url = \"\"\r\n\r\n    if (!this.state.ticker || !this.state.qty) {\r\n      errors.push({ msg: \"Please fill in all fields\" })\r\n    }\r\n\r\n    if (!Number.isInteger(this.state.qty)) {\r\n      errors.push({ msg: \"Quantity has to be an integer\" })\r\n    }\r\n\r\n    //if there are errors, rerender form with flash message containing error\r\n    if (errors.length) {\r\n      this.setState({ errors: errors })\r\n    } else {\r\n      //call to alpha vantage api using ticker and stock count\r\n      url = `https://cloud.iexapis.com/stable/stock/${this.state.ticker}/quote?token=pk_14ce505b6dd1448cad3d754e27cb2ebd`\r\n      axios\r\n        .get(url)\r\n        .then((res) => {\r\n          //retrieve object containing stockprices with key=time\r\n          const stockPrices = res.data\r\n          \r\n          //if ticker symbol is invalid\r\n          if (!stockPrices) {\r\n            alert(\"Please enter valid ticker symbol\")\r\n            return {\r\n              error: true,\r\n              message: \"invalid ticker symbol\",\r\n            }\r\n          } else {\r\n            //retrieve the most recent stock price\r\n            return stockPrices['latestPrice']\r\n          }\r\n        })\r\n        .then(async (price) => {\r\n          if (price.error) {\r\n            return\r\n          }\r\n\r\n          //calculate total cost\r\n          let cost = this.state.qty * price\r\n\r\n          //round cost to 2 decimal places\r\n          cost = cost.toFixed(2)\r\n          cost = parseFloat(cost)\r\n\r\n          //retrieve user from App component\r\n          const userEmail = this.props.getUser()\r\n\r\n          //retrieve user balance from database\r\n          let res = await axios.get(\r\n            `/users/email/${userEmail}/balance`,\r\n            (err) => {\r\n              if (err) {\r\n                console.log(err)\r\n              }\r\n            }\r\n          )\r\n          let balance = res.data.balance\r\n          let newBalance = balance - cost\r\n          //round newBalance to two decimal places\r\n          newBalance = newBalance.toFixed(2)\r\n          newBalance = parseFloat(newBalance)\r\n\r\n          //if user has enough money, purchase is valid.\r\n          if (newBalance >= 0) {\r\n            //deduct cost from balance in db\r\n            axios.post(\r\n              `/users/email/${userEmail}/balance/${newBalance}`,\r\n              (err) => {\r\n                if (err) {\r\n                  console.log(err)\r\n                }\r\n              }\r\n            )\r\n\r\n            //add stock to user's account\r\n            axios.post(\r\n              `/stocks/email/${userEmail}/stock/${this.state.ticker}/qty/${this.state.qty}`,\r\n              {\r\n                url: url\r\n              },\r\n              (err) => {\r\n                if (err) {\r\n                  console.log(err)\r\n                }\r\n              }\r\n            )\r\n\r\n            //record transaction\r\n            axios.post(\r\n              `/transactions/email/${userEmail}/stock/${this.state.ticker}/qty/${this.state.qty}/cost/${cost}`,\r\n              {\r\n                url: url\r\n              },\r\n              (err) => {\r\n                if (err) {\r\n                  console.log(err)\r\n                }\r\n              }\r\n            )\r\n\r\n            alert(\r\n              `You have successfully purchase ${this.state.qty} shares of ${this.state.ticker} for a total of \\$${cost}. Your new balance is \\$${newBalance}.`\r\n            )\r\n          } else {\r\n            //User does not have enough money\r\n            alert(\"You don't have enough money.\")\r\n          }\r\n        })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Purchase\r\n          onTickerChange={this.onTickerChange}\r\n          onQtyChange={this.onQtyChange}\r\n          onSubmitHandler={this.onSubmitHandler}\r\n          errors={this.state.errors}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PurchaseContainer\r\n","import { connect } from \"react-redux\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport { Link } from \"react-router-dom\"\r\nimport React from \"react\"\r\nimport Table from \"@material-ui/core/Table\"\r\nimport TableBody from \"@material-ui/core/TableBody\"\r\nimport TableCell from \"@material-ui/core/TableCell\"\r\nimport TableContainer from \"@material-ui/core/TableContainer\"\r\nimport TableHead from \"@material-ui/core/TableHead\"\r\nimport TableRow from \"@material-ui/core/TableRow\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport Paper from \"@material-ui/core/Paper\"\r\nimport \"../App.css\"\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n})\r\n\r\nconst Transactions = (props) => {\r\n  const classes = useStyles()\r\n\r\n  if (props.email) {\r\n    return (\r\n      <div class=\"table\">\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Transactions History\r\n        </Typography>\r\n        <TableContainer component={Paper} className=\"tableContainer\">\r\n          <Table className={classes.table} aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Buy / Sell</TableCell>\r\n                <TableCell align=\"right\">Stock Ticker Symbol</TableCell>\r\n                <TableCell align=\"right\">Quantity Purchased/Sold</TableCell>\r\n                <TableCell align=\"right\">Total Price</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {props.transactionHistory.length > 0 ? (\r\n                props.transactionHistory.map((transaction, index) => (\r\n                  <TableRow key={index}>\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      Buy\r\n                    </TableCell>\r\n                    <TableCell align=\"right\">\r\n                      {transaction.tickerSymb.toUpperCase()}\r\n                    </TableCell>\r\n                    <TableCell align=\"right\">{transaction.qty}</TableCell>\r\n                    <TableCell align=\"right\">{transaction.cost}</TableCell>\r\n                  </TableRow>\r\n                ))\r\n              ) : (\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  User does not have any transactions\r\n                </TableCell>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    )\r\n  } else {\r\n    return (\r\n      <div>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Transactions History\r\n        </Typography>\r\n        <p>\r\n          Please <Link to=\"../containers/Login\">log in</Link> to view your transaction history.\r\n        </p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    email: state.email,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Transactions)\r\n","import React from \"react\"\r\nimport axios from \"axios\"\r\nimport Transactions from \"../components/Transactions\"\r\nimport { connect } from 'react-redux'\r\n\r\nclass TransactionsContainer extends React.Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n        transactionHistory: []\r\n    }\r\n  }\r\n\r\n  getTransactionHistory = () => {\r\n    axios\r\n      .get(`/transactions/email/${this.props.email}`)\r\n      .then((res) => {\r\n        var transactionHistory = Array.from(res.data.transactionHistory)\r\n\r\n        //sort transaction history with most recent at the front of the array\r\n        transactionHistory.sort((t1, t2) => {\r\n          return t1.time < t2.time\r\n        })\r\n        this.setState({transactionHistory : transactionHistory})\r\n      })\r\n  }\r\n\r\n  render() {\r\n    if (this.props.email && this.state.transactionHistory == 0) {\r\n      this.getTransactionHistory()\r\n    }\r\n    return <Transactions transactionHistory={this.state.transactionHistory}/>\r\n  }\r\n}\r\n\r\nexport default TransactionsContainer","import React, { Children } from \"react\"\nimport \"./App.css\"\nimport LoginContainer from \"./containers/Login\"\nimport RegisterContainer from \"./containers/Register\"\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\"\nimport Navbar from \"./components/Navbar\"\nimport Home from \"./components/Home\"\nimport PortfolioContainer from \"./containers/Portfolio\"\nimport PurchaseContainer from \"./containers/Purchase\"\nimport TransactionsContainer from \"./containers/Transactions\"\nimport \"./styles/app.css\"\nimport { connect } from \"react-redux\"\n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      user: \"\",\n    }\n  }\n  setUser = (email) => {\n    this.setState({ user: email })\n  }\n\n  getUser = () => {\n    return this.state.user\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Router>\n          {/* containers all the links */}\n          <Navbar className=\"navbar\" />\n\n          {/* Looks through the child <Routes>s and returns the first one that matches the URL */}\n          <Switch>\n            <Route path=\"/components/Home\">\n              <Home className=\"top\" />\n            </Route>\n\n            <Route path=\"/containers/Login\">\n              <LoginContainer className=\"top\" setUser={this.setUser} />\n            </Route>\n\n            <Route path=\"/containers/Register\">\n              <RegisterContainer className=\"top\" />\n            </Route>\n\n            <Route path=\"/containers/Transactions\">\n              <TransactionsContainer className=\"top\" email={this.props.email} />\n            </Route>\n\n            <Route path=\"/containers/Portfolio\">\n              <PortfolioContainer className=\"top\" user={this.state.user} />\n            </Route>\n\n            <Route path=\"/containers/Purchase\">\n              <PurchaseContainer getUser={this.getUser} />\n            </Route>\n          </Switch>\n        </Router>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    email: state.email,\n  }\n}\n\nexport default connect(mapStateToProps)(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport * as serviceWorker from \"./serviceWorker\"\nimport { Provider } from \"react-redux\"\nimport store from './redux/reduxStore'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}